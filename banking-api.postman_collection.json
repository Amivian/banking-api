{
    "info": {
        "name": "Banking API Tests",
        "description": "Complete test collection for the Banking API with all 6 test scenarios",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "variable": [
        {
            "key": "base_url",
            "value": "http://localhost:3000/api/v1",
            "type": "string"
        },
        {
            "key": "user1_token",
            "value": "",
            "type": "string"
        },
        {
            "key": "user2_token",
            "value": "",
            "type": "string"
        }
    ],
    "item": [
        {
            "name": "1. Register User One",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 201\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"Response has user and token\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.have.property('user');",
                            "    pm.expect(jsonData).to.have.property('token');",
                            "    pm.collectionVariables.set('user1_token', jsonData.token);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"email\": \"user1@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                    "raw": "{{base_url}}/users/register",
                    "host": ["{{base_url}}"],
                    "path": ["users", "register"]
                }
            }
        },
        {
            "name": "2. Register User Two",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 201\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"Response has user and token\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.have.property('user');",
                            "    pm.expect(jsonData).to.have.property('token');",
                            "    pm.collectionVariables.set('user2_token', jsonData.token);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"email\": \"user2@example.com\",\n    \"password\": \"password456\"\n}"
                },
                "url": {
                    "raw": "{{base_url}}/users/register",
                    "host": ["{{base_url}}"],
                    "path": ["users", "register"]
                }
            }
        },
        {
            "name": "3. Login User One",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"Login successful\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.have.property('user');",
                            "    pm.expect(jsonData).to.have.property('token');",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"email\": \"user1@example.com\",\n    \"password\": \"password123\"\n}"
                },
                "url": {
                    "raw": "{{base_url}}/users/login",
                    "host": ["{{base_url}}"],
                    "path": ["users", "login"]
                }
            }
        },
        {
            "name": "4. Fund User Account",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"Balance updated correctly\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.user.balance).to.eql(100);",
                            "    pm.expect(jsonData.transaction.type).to.eql('fund');",
                            "    pm.expect(jsonData.transaction.amount).to.eql(100);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer {{user1_token}}"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"amount\": 100\n}"
                },
                "url": {
                    "raw": "{{base_url}}/accounts/fund",
                    "host": ["{{base_url}}"],
                    "path": ["accounts", "fund"]
                }
            }
        },
        {
            "name": "5. Transfer Funds",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"Transfer successful\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.message).to.eql('Transfer successful.');",
                            "    pm.expect(jsonData.sender.balance).to.eql(50);",
                            "    pm.expect(jsonData.receiver.balance).to.eql(50);",
                            "    pm.expect(jsonData.transaction.type).to.eql('transfer');",
                            "    pm.expect(jsonData.transaction.amount).to.eql(50);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer {{user1_token}}"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"recipientEmail\": \"user2@example.com\",\n    \"amount\": 50\n}"
                },
                "url": {
                    "raw": "{{base_url}}/accounts/transfer",
                    "host": ["{{base_url}}"],
                    "path": ["accounts", "transfer"]
                }
            }
        },
        {
            "name": "6. Test Insufficient Balance",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 400\", function () {",
                            "    pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"Insufficient balance error\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.error).to.eql('Insufficient balance.');",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer {{user1_token}}"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"recipientEmail\": \"user2@example.com\",\n    \"amount\": 100\n}"
                },
                "url": {
                    "raw": "{{base_url}}/accounts/transfer",
                    "host": ["{{base_url}}"],
                    "path": ["accounts", "transfer"]
                }
            }
        },
        {
            "name": "7. Withdraw Funds",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"Withdrawal successful\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.user.balance).to.eql(20);",
                            "    pm.expect(jsonData.transaction.type).to.eql('withdraw');",
                            "    pm.expect(jsonData.transaction.amount).to.eql(30);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer {{user1_token}}"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"amount\": 30\n}"
                },
                "url": {
                    "raw": "{{base_url}}/accounts/withdraw",
                    "host": ["{{base_url}}"],
                    "path": ["accounts", "withdraw"]
                }
            }
        }
    ]
}
